Search.setIndex({"docnames": ["index", "pytrustplatform"], "filenames": ["index.rst", "pytrustplatform.rst"], "titles": ["pytrustplatform documentation", "pytrustplatform package"], "terms": {"i": [0, 1], "collect": [0, 1], "interact": [0, 1], "microchip": [0, 1], "cryptoauthent": [0, 1], "tm": [0, 1], "avail": [0, 1], "instal": [0, 1], "us": [0, 1], "pip": [0, 1], "pypi": [0, 1], "http": [0, 1], "org": [0, 1], "project": [0, 1], "brows": [0, 1], "sourc": [0, 1], "code": [0, 1], "github": [0, 1], "com": [0, 1], "pic": [0, 1], "avr": [0, 1], "tool": [0, 1], "read": [0, 1], "api": [0, 1], "io": [0, 1], "changelog": [0, 1], "blob": [0, 1], "main": [0, 1], "md": [0, 1], "The": [0, 1], "cert_get_data": [0, 1], "modul": [0, 1], "contain": [0, 1], "function": 0, "variou": [0, 1], "inform": [0, 1], "subject": [0, 1], "kei": [0, 1], "identifi": [0, 1], "import": [0, 1], "cert_get_skid": [0, 1], "skid": [0, 1], "mycertif": [0, 1], "crt": [0, 1], "common": [0, 1], "name": [0, 1], "cert_get_common_nam": [0, 1], "common_nam": [0, 1], "fingerprint": [0, 1], "create_cert_fingerprint": [0, 1], "device_cert_build": [0, 1], "sign": [0, 1], "request": [0, 1], "connect": [0, 1], "iot": [0, 1], "kit": [0, 1], "ask": [0, 1], "pykitcommand": [0, 1], "setup": [0, 1], "appropri": [0, 1], "firmwar": [0, 1], "kitprotocol": [0, 1], "setup_kit": [0, 1], "info": [0, 1], "iotprovis": [0, 1], "requir": [0, 1], "continu": [0, 1], "port": [0, 1], "baud": [0, 1], "protocol_baud": [0, 1], "protocol": [0, 1], "protocol_class": [0, 1], "build": [0, 1], "A": [0, 1], "gener": [0, 1], "part": [0, 1], "process": [0, 1], "both": [0, 1], "written": [0, 1], "file": [0, 1], "serial": 0, "pyseri": [0, 1], "context": [0, 1], "manag": [0, 1], "ensur": [0, 1], "close": [0, 1], "after": [0, 1], "baudrat": [0, 1], "serial_connect": [0, 1], "firmware_driv": [0, 1], "build_device_cert": [0, 1], "device_cert": [0, 1], "my_sign": [0, 1], "ca": 0, "generated_devic": [0, 1], "ecc_cert_build": [0, 1], "an": [0, 1], "build_certs_from_ecc": [0, 1], "ecc_device_cert": [0, 1], "ecc_signer_cert": [0, 1], "generated_sign": [0, 1], "verification_cert_build": [0, 1], "typic": [0, 1], "when": [0, 1], "regist": [0, 1], "author": [0, 1], "cloud": [0, 1], "provid": 0, "privat": [0, 1], "build_verification_cert": [0, 1], "verification_cert": [0, 1], "my_regcode_0123456789": [0, 1], "generated_verif": [0, 1], "ca_creat": [0, 1], "can": [0, 1], "alreadi": [0, 1], "exist": [0, 1], "ca_create_root": [0, 1], "ca_create_signer_csr": [0, 1], "ca_create_sign": [0, 1], "root": [0, 1], "doe": [0, 1], "generated_root": [0, 1], "generated_signer_ca": [0, 1], "base": [0, 1], "previous": [0, 1], "thi": [0, 1], "packag": 0, "publish": [0, 1], "messag": [0, 1], "librari": 0, "user": [0, 1], "basic": [0, 1], "configur": [0, 1], "see": [0, 1], "exampl": [0, 1], "below": [0, 1], "best": [0, 1], "result": [0, 1], "more": [0, 1], "thorough": [0, 1], "recommend": [0, 1], "order": [0, 1], "control": [0, 1], "verbos": [0, 1], "output": [0, 1], "stack": [0, 1], "which": [0, 1], "also": [0, 1], "yaml": [0, 1], "includ": [0, 1], "although": [0, 1], "onli": [0, 1], "cli": [0, 1], "simpl": [0, 1], "basicconfig": [0, 1], "format": [0, 1], "levelnam": [0, 1], "": [0, 1], "level": [0, 1], "warn": [0, 1], "pyedbglib": [0, 1], "its": [0, 1], "transport": [0, 1], "usb": [0, 1], "like": [0, 1], "libusb": [0, 1], "creation": 0, "add_signer_extens": [0, 1], "load_certif": [0, 1], "load_csr": [0, 1], "load_kei": [0, 1], "load_or_create_kei": [0, 1], "random_cert_sn": [0, 1], "save_certif": [0, 1], "save_kei": [0, 1], "get": 0, "cert_get_common_name_from_pem": [0, 1], "compress": 0, "decod": 0, "certificaterepresent": [0, 1], "build_serialnumb": [0, 1], "compressedcertificatedata": [0, 1], "read_from_kit": [0, 1], "read_from_kit_slot5": [0, 1], "devicecertificaterepresent": [0, 1], "signercertificaterepresent": [0, 1], "create_key_identifi": [0, 1], "builder": 0, "build_device_csr": [0, 1], "device_cert_sn": [0, 1], "ecccertificatebuild": [0, 1], "add_signatur": [0, 1], "set_pubkei": [0, 1], "set_serial_numb": [0, 1], "set_validity_d": [0, 1], "mah1hdevicecertificatebuild": [0, 1], "set_authority_key_identifi": [0, 1], "set_issu": [0, 1], "mah1hsignercertificatebuild": [0, 1], "set_subject": [0, 1], "set_subject_key_identifi": [0, 1], "mah4idevicecertificatebuild": [0, 1], "mah4isignercertificatebuild": [0, 1], "tngdevicecertificatebuild": [0, 1], "set_mac_address": [0, 1], "tngsignercertificatebuild": [0, 1], "type": 0, "classify_ecc_typ": [0, 1], "manifest": 0, "create_manifest_from_cert": [0, 1], "create_manifest_from_secure_el": [0, 1], "extract_certif": [0, 1], "extract_certificates_from_secure_el": [0, 1], "get_secure_el": [0, 1], "list_secure_element_id": [0, 1], "list_secure_el": [0, 1], "append": [0, 1], "dump": [0, 1], "find_secure_el": [0, 1], "manifestsign": [0, 1], "find_cert": [0, 1], "load": [0, 1], "secureel": [0, 1], "get_certif": [0, 1], "set_provisioning_tim": [0, 1], "set_publicjwk": [0, 1], "set_unique_id": [0, 1], "signedsecureel": [0, 1], "encod": [0, 1], "verifi": [0, 1], "tcustomtlssecureel": [0, 1], "tnflextlssecureel": [0, 1], "tngotlssecureel": [0, 1], "get_device_certif": [0, 1], "get_signer_certif": [0, 1], "load_cert": [0, 1], "urlsafe_b64decode_unpad": [0, 1], "urlsafe_b64encode_unpad": [0, 1], "certsdata": [0, 1], "get_provisioning_tim": [0, 1], "get_pubkei": [0, 1], "get_serial_numb": [0, 1], "eccdataprovid": [0, 1], "ecctestdata": [0, 1], "manifestdataprovid": [0, 1], "number": 0, "new_device_serialnumb": [0, 1], "new_publickey_serialnumb": [0, 1], "new_random_serialnumb": [0, 1], "error": 0, "pytrustcertificateerror": [0, 1], "pytrusterror": [0, 1], "index": [0, 1], "search": [0, 1], "page": 0, "public_kei": 1, "none": 1, "authority_cert": 1, "add": 1, "extens": 1, "param": 1, "public": 1, "default": 1, "taken": 1, "option": 1, "root_ca_key_path": 1, "root_ca_cert_path": 1, "forc": 1, "fals": 1, "org_nam": 1, "default_root_common_nam": 1, "countri": 1, "path": 1, "look": 1, "place": 1, "store": 1, "re": 1, "specifi": 1, "organ": 1, "attribut": 1, "signer_ca_csr_path": 1, "signer_ca_cert_path": 1, "signer_ca_key_path": 1, "default_organization_nam": 1, "default_signer_common_nam": 1, "certificate_path": 1, "return": 1, "csr_path": 1, "filenam": 1, "force_cr": 1, "attempt": 1, "If": 1, "new": 1, "open": 1, "even": 1, "content": 1, "size": 1, "posit": 1, "non": 1, "trimmabl": 1, "x": 1, "509": 1, "byte": 1, "random": 1, "write": 1, "pem": 1, "helper": 1, "pass": 1, "paramet": 1, "str": 1, "string": 1, "ascii": 1, "hex": 1, "class": 1, "compressed_cert_decod": 1, "compressed_certificate_data": 1, "object": 1, "represent": 1, "pubkei": 1, "dev_sn_numb": 1, "some": 1, "field": 1, "do": 1, "slot": 1, "5": 1, "driver": 1, "instanc": 1, "commun": 1, "mcu": 1, "readabl": 1, "mah1h": 1, "mah4i": 1, "bytearrai": 1, "should": 1, "deriv": 1, "support": 1, "signer_ca_cert_fil": 1, "signer_ca_key_fil": 1, "csr_filenam": 1, "cert_filenam": 1, "bool": 1, "overwrit": 1, "pre": 1, "cryptographi": 1, "x509": 1, "rais": 1, "someth": 1, "wrong": 1, "signatur": 1, "templat": 1, "cn": 1, "uniqu": 1, "id": 1, "o": 1, "predefin": 1, "certificatesigningrequest": 1, "cert": 1, "sha256": 1, "date": 1, "length": 1, "int": 1, "certificatebuild": 1, "rtype": 1, "atecc608": 1, "cert_pem": 1, "tbd": 1, "from_coord": 1, "expect": 1, "outcom": 1, "so": 1, "we": 1, "raw": 1, "der": 1, "ecpointstr": 1, "ecpoint": 1, "ecpointbitstr": 1, "from_byt": 1, "0": 1, "33": 1, "byteord": 1, "big": 1, "set": 1, "being": 1, "built": 1, "validity_not_befor": 1, "validity_not_aft": 1, "valid": 1, "datetim": 1, "time": 1, "where": 1, "note": 1, "befor": 1, "atecc608a": 1, "akid": 1, "signer_id": 1, "issuer": 1, "unus": 1, "extension_index": 1, "4": 1, "eui48": 1, "ffffffffffffffff": 1, "mac": 1, "address": 1, "serial_numb": 1, "3": 1, "signer_cert_filenam": 1, "device_cert_filenam": 1, "device_cert_templ": 1, "signer_cert_templ": 1, "out": 1, "device_certif": 1, "signer_certif": 1, "differenti": 1, "between": 1, "ecc_typ": 1, "ecc_serial_numb": 1, "ecc_otp_valu": 1, "classifi": 1, "input": 1, "list": 1, "match": 1, "possibl": 1, "go": 1, "tng": 1, "flex": 1, "tflx": 1, "custom": 1, "otp": 1, "area": 1, "subject_cn": 1, "verification_cert_filenam": 1, "For": 1, "aw": 1, "registr": 1, "manifest_funct": 1, "manifest_signer_cert": 1, "manifest_signer_kei": 1, "signer_cert": 1, "secur": 1, "element": 1, "last": 1, "e": 1, "g": 1, "tngotl": 1, "tflxtl": 1, "kit_info": 1, "unique_id": 1, "key_index": 1, "cert_index": 1, "file_nam": 1, "outdir": 1, "extract": 1, "same": 1, "correspond": 1, "defin": 1, "first": 1, "subsequ": 1, "previou": 1, "one": 1, "1": 1, "sever": 1, "either": 1, "folder": 1, "put": 1, "script": 1, "wa": 1, "execut": 1, "secure_el": 1, "save": 1, "them": 1, "directori": 1, "ani": 1, "subclass": 1, "thereof": 1, "secure_element_id": 1, "pars": 1, "json": 1, "featur": 1, "signer_ca": 1, "entri": 1, "pretti": 1, "find": 1, "lower": 1, "case": 1, "letter": 1, "sucessful": 1, "otherwis": 1, "verification_certificates_fold": 1, "locat": 1, "must": 1, "check": 1, "b": 1, "initi": 1, "Not": 1, "need": 1, "ha": 1, "associ": 1, "found": 1, "arrai": 1, "ar": 1, "base64": 1, "unpdad": 1, "base64url": 1, "rfc7517": 1, "section": 1, "7": 1, "provis": 1, "timestamp": 1, "utc": 1, "usual": 1, "kid": 1, "kty": 1, "crv": 1, "y": 1, "x5c": 1, "web": 1, "jwk": 1, "crypto": 1, "authent": 1, "ec": 1, "rfc": 1, "7518": 1, "6": 1, "ellipt": 1, "curv": 1, "p": 1, "256": 1, "2": 1, "unpad": 1, "compon": 1, "integ": 1, "uniqueid": 1, "9": 1, "se_typ": 1, "sub": 1, "tngosecureel": 1, "partnumb": 1, "unsucess": 1, "through": 1, "valueerror": 1, "data_provid": 1, "implement": 1, "abstract": 1, "cert_file_nam": 1, "url": 1, "safe": 1, "without": 1, "pad": 1, "describ": 1, "interfac": 1, "obtain": 1, "physic": 1, "dummi": 1, "test": 1, "chain_index": 1, "sinc": 1, "coordin": 1, "64": 1, "p256": 1, "uncompress": 1, "long": 1, "abc": 1, "ad": 1, "could": 1, "via": 1, "platfrom": 1, "develop": 1, "other": 1, "board": 1, "serialnumb": 1, "device_serial_numb": 1, "16": 1, "not_valid_befor": 1, "not_valid_aft": 1, "enc_dat": 1, "sn": 1, "take": 1, "have": 1, "prefer": 1, "max": 1, "32": 1, "ecc608": 1, "specif": 1, "except": 1, "pytrust_error": 1, "msg": 1, "signal": 1, "problem": 1, "all": 1, "document": 1}, "objects": {"": [[1, 0, 0, "-", "pytrustplatform"]], "pytrustplatform": [[1, 0, 0, "-", "ca_create"], [1, 0, 0, "-", "cert_get_data"], [1, 0, 0, "-", "compressed_cert_decoder"], [1, 0, 0, "-", "device_cert_builder"], [1, 0, 0, "-", "ecc_cert_builder"], [1, 0, 0, "-", "ecc_types"], [1, 0, 0, "-", "pytrust_errors"], [1, 0, 0, "-", "serialnumber"], [1, 0, 0, "-", "verification_cert_builder"]], "pytrustplatform.ca_create": [[1, 1, 1, "", "add_signer_extensions"], [1, 1, 1, "", "ca_create_root"], [1, 1, 1, "", "ca_create_signer"], [1, 1, 1, "", "ca_create_signer_csr"], [1, 1, 1, "", "load_certificate"], [1, 1, 1, "", "load_csr"], [1, 1, 1, "", "load_key"], [1, 1, 1, "", "load_or_create_key"], [1, 1, 1, "", "random_cert_sn"], [1, 1, 1, "", "save_certificate"], [1, 1, 1, "", "save_key"]], "pytrustplatform.cert_get_data": [[1, 1, 1, "", "cert_get_common_name"], [1, 1, 1, "", "cert_get_common_name_from_pem"], [1, 1, 1, "", "cert_get_skid"], [1, 1, 1, "", "create_cert_fingerprint"]], "pytrustplatform.compressed_cert_decoder": [[1, 2, 1, "", "CertificateRepresentation"], [1, 2, 1, "", "CompressedCertificateData"], [1, 2, 1, "", "DeviceCertificateRepresentation"], [1, 2, 1, "", "SignerCertificateRepresentation"], [1, 1, 1, "", "create_key_identifier"]], "pytrustplatform.compressed_cert_decoder.CertificateRepresentation": [[1, 3, 1, "", "build_serialnumber"], [1, 3, 1, "", "log"]], "pytrustplatform.compressed_cert_decoder.CompressedCertificateData": [[1, 3, 1, "", "read_from_kit"], [1, 3, 1, "", "read_from_kit_slot5"]], "pytrustplatform.device_cert_builder": [[1, 1, 1, "", "build_device_cert"], [1, 1, 1, "", "build_device_csr"], [1, 1, 1, "", "device_cert_sn"]], "pytrustplatform.ecc_cert_builder": [[1, 2, 1, "", "EccCertificateBuilder"], [1, 2, 1, "", "Mah1hDeviceCertificateBuilder"], [1, 2, 1, "", "Mah1hSignerCertificateBuilder"], [1, 2, 1, "", "Mah4iDeviceCertificateBuilder"], [1, 2, 1, "", "Mah4iSignerCertificateBuilder"], [1, 2, 1, "", "TngDeviceCertificateBuilder"], [1, 2, 1, "", "TngSignerCertificateBuilder"], [1, 1, 1, "", "build_certs_from_ecc"]], "pytrustplatform.ecc_cert_builder.EccCertificateBuilder": [[1, 3, 1, "", "add_signature"], [1, 3, 1, "", "set_pubkey"], [1, 3, 1, "", "set_serial_number"], [1, 3, 1, "", "set_validity_dates"]], "pytrustplatform.ecc_cert_builder.Mah1hDeviceCertificateBuilder": [[1, 3, 1, "", "build"], [1, 3, 1, "", "set_authority_key_identifier"], [1, 3, 1, "", "set_issuer"]], "pytrustplatform.ecc_cert_builder.Mah1hSignerCertificateBuilder": [[1, 3, 1, "", "build"], [1, 3, 1, "", "set_subject"], [1, 3, 1, "", "set_subject_key_identifier"], [1, 3, 1, "", "set_validity_dates"]], "pytrustplatform.ecc_cert_builder.Mah4iDeviceCertificateBuilder": [[1, 3, 1, "", "build"]], "pytrustplatform.ecc_cert_builder.TngDeviceCertificateBuilder": [[1, 3, 1, "", "build"], [1, 3, 1, "", "set_authority_key_identifier"], [1, 3, 1, "", "set_issuer"], [1, 3, 1, "", "set_mac_address"], [1, 3, 1, "", "set_subject"], [1, 3, 1, "", "set_subject_key_identifier"]], "pytrustplatform.ecc_cert_builder.TngSignerCertificateBuilder": [[1, 3, 1, "", "build"], [1, 3, 1, "", "set_subject"], [1, 3, 1, "", "set_subject_key_identifier"]], "pytrustplatform.ecc_types": [[1, 1, 1, "", "classify_ecc_type"]], "pytrustplatform.manifest": [[1, 0, 0, "-", "data_provider"], [1, 0, 0, "-", "manifest"], [1, 0, 0, "-", "manifest_functions"]], "pytrustplatform.manifest.data_provider": [[1, 2, 1, "", "CertsData"], [1, 2, 1, "", "EccDataProvider"], [1, 2, 1, "", "EccTestData"], [1, 2, 1, "", "ManifestDataProvider"]], "pytrustplatform.manifest.data_provider.CertsData": [[1, 3, 1, "", "get_certificate"], [1, 3, 1, "", "get_provisioning_time"], [1, 3, 1, "", "get_pubkey"], [1, 3, 1, "", "get_serial_number"]], "pytrustplatform.manifest.data_provider.EccDataProvider": [[1, 3, 1, "", "get_certificate"], [1, 3, 1, "", "get_provisioning_time"], [1, 3, 1, "", "get_pubkey"], [1, 3, 1, "", "get_secure_element"], [1, 3, 1, "", "get_serial_number"]], "pytrustplatform.manifest.data_provider.EccTestData": [[1, 3, 1, "", "get_certificate"], [1, 3, 1, "", "get_provisioning_time"], [1, 3, 1, "", "get_pubkey"], [1, 3, 1, "", "get_secure_element"], [1, 3, 1, "", "get_serial_number"]], "pytrustplatform.manifest.data_provider.ManifestDataProvider": [[1, 3, 1, "", "get_certificate"], [1, 3, 1, "", "get_pubkey"], [1, 3, 1, "", "get_serial_number"]], "pytrustplatform.manifest.manifest": [[1, 2, 1, "", "Manifest"], [1, 2, 1, "", "ManifestSigner"], [1, 2, 1, "", "SecureElement"], [1, 2, 1, "", "SignedSecureElement"], [1, 2, 1, "", "TcustomTlsSecureElement"], [1, 2, 1, "", "TnFlexTlsSecureElement"], [1, 2, 1, "", "TnGoTlsSecureElement"], [1, 1, 1, "", "load_cert"], [1, 1, 1, "", "urlsafe_b64decode_unpadded"], [1, 1, 1, "", "urlsafe_b64encode_unpadded"]], "pytrustplatform.manifest.manifest.Manifest": [[1, 3, 1, "", "append"], [1, 3, 1, "", "dumps"], [1, 3, 1, "", "find_secure_element"]], "pytrustplatform.manifest.manifest.ManifestSigner": [[1, 3, 1, "", "find_cert"], [1, 4, 1, "", "fingerprint"], [1, 3, 1, "", "load"]], "pytrustplatform.manifest.manifest.SecureElement": [[1, 3, 1, "", "get_certificate"], [1, 3, 1, "", "set_provisioning_time"], [1, 3, 1, "", "set_publicJWK"], [1, 3, 1, "", "set_unique_id"]], "pytrustplatform.manifest.manifest.SignedSecureElement": [[1, 3, 1, "", "encode"], [1, 3, 1, "", "get_secure_element"], [1, 3, 1, "", "verify"]], "pytrustplatform.manifest.manifest.TnGoTlsSecureElement": [[1, 3, 1, "", "build"], [1, 3, 1, "", "get_device_certificate"], [1, 3, 1, "", "get_signer_certificate"]], "pytrustplatform.manifest.manifest_functions": [[1, 1, 1, "", "create_manifest_from_certs"], [1, 1, 1, "", "create_manifest_from_secure_element"], [1, 1, 1, "", "extract_certificates"], [1, 1, 1, "", "extract_certificates_from_secure_element"], [1, 1, 1, "", "get_secure_element"], [1, 1, 1, "", "list_secure_element_ids"], [1, 1, 1, "", "list_secure_elements"]], "pytrustplatform.pytrust_errors": [[1, 5, 1, "", "PytrustCertificateError"], [1, 5, 1, "", "PytrustError"]], "pytrustplatform.serialnumber": [[1, 1, 1, "", "new_device_serialnumber"], [1, 1, 1, "", "new_publickey_serialnumber"], [1, 1, 1, "", "new_random_serialnumber"]], "pytrustplatform.verification_cert_builder": [[1, 1, 1, "", "build_verification_cert"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "exception", "Python exception"]}, "titleterms": {"pytrustplatform": [0, 1], "document": 0, "python": [0, 1], "trust": [0, 1], "platform": [0, 1], "util": [0, 1], "overview": [0, 1], "fetch": [0, 1], "data": [0, 1], "from": [0, 1], "certif": [0, 1], "creat": [0, 1], "devic": [0, 1], "csr": [0, 1], "signer": [0, 1], "ecc": [0, 1], "verif": [0, 1], "chain": [0, 1], "log": [0, 1], "depend": [0, 1], "content": 0, "indic": 0, "tabl": 0, "packag": 1, "ca": 1, "creation": 1, "get": 1, "compress": 1, "decod": 1, "builder": 1, "type": 1, "manifest": 1, "function": 1, "librari": 1, "provid": 1, "serial": 1, "number": 1, "error": 1}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 58}, "alltitles": {"pytrustplatform documentation": [[0, "pytrustplatform-documentation"]], "Python Trust Platform utilities": [[0, "python-trust-platform-utilities"], [1, "python-trust-platform-utilities"]], "Overview": [[0, "overview"], [1, "overview"]], "Fetching data from a certificate": [[0, "fetching-data-from-a-certificate"], [1, "fetching-data-from-a-certificate"]], "Create device certificate and CSR": [[0, "create-device-certificate-and-csr"], [1, "create-device-certificate-and-csr"]], "Create device and signer certificate from ECC data": [[0, "create-device-and-signer-certificate-from-ecc-data"], [1, "create-device-and-signer-certificate-from-ecc-data"]], "Create verification certificate": [[0, "create-verification-certificate"], [1, "create-verification-certificate"]], "Create chain of trust": [[0, "create-chain-of-trust"], [1, "create-chain-of-trust"]], "Logging": [[0, "logging"], [1, "logging"]], "Dependencies": [[0, "dependencies"], [1, "dependencies"]], "Contents:": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "pytrustplatform package": [[1, "pytrustplatform-package"]], "CA certificate creation": [[1, "module-pytrustplatform.ca_create"]], "Get certificate data": [[1, "module-pytrustplatform.cert_get_data"]], "Compressed certificate decoder": [[1, "module-pytrustplatform.compressed_cert_decoder"]], "Device certificate builder": [[1, "module-pytrustplatform.device_cert_builder"]], "ECC certificate builder": [[1, "module-pytrustplatform.ecc_cert_builder"]], "ECC type utilities": [[1, "module-pytrustplatform.ecc_types"]], "Verification certificate builder": [[1, "module-pytrustplatform.verification_cert_builder"]], "Manifest functions": [[1, "module-pytrustplatform.manifest.manifest_functions"]], "Manifest library": [[1, "module-pytrustplatform.manifest.manifest"]], "Manifest data provider": [[1, "module-pytrustplatform.manifest.data_provider"]], "Serial number utilities": [[1, "module-pytrustplatform.serialnumber"]], "Errors": [[1, "module-pytrustplatform.pytrust_errors"]], "pytrustplatform": [[1, "module-pytrustplatform"]]}, "indexentries": {"certificaterepresentation (class in pytrustplatform.compressed_cert_decoder)": [[1, "pytrustplatform.compressed_cert_decoder.CertificateRepresentation"]], "certsdata (class in pytrustplatform.manifest.data_provider)": [[1, "pytrustplatform.manifest.data_provider.CertsData"]], "compressedcertificatedata (class in pytrustplatform.compressed_cert_decoder)": [[1, "pytrustplatform.compressed_cert_decoder.CompressedCertificateData"]], "devicecertificaterepresentation (class in pytrustplatform.compressed_cert_decoder)": [[1, "pytrustplatform.compressed_cert_decoder.DeviceCertificateRepresentation"]], "ecccertificatebuilder (class in pytrustplatform.ecc_cert_builder)": [[1, "pytrustplatform.ecc_cert_builder.EccCertificateBuilder"]], "eccdataprovider (class in pytrustplatform.manifest.data_provider)": [[1, "pytrustplatform.manifest.data_provider.EccDataProvider"]], "ecctestdata (class in pytrustplatform.manifest.data_provider)": [[1, "pytrustplatform.manifest.data_provider.EccTestData"]], "mah1hdevicecertificatebuilder (class in pytrustplatform.ecc_cert_builder)": [[1, "pytrustplatform.ecc_cert_builder.Mah1hDeviceCertificateBuilder"]], "mah1hsignercertificatebuilder (class in pytrustplatform.ecc_cert_builder)": [[1, "pytrustplatform.ecc_cert_builder.Mah1hSignerCertificateBuilder"]], "mah4idevicecertificatebuilder (class in pytrustplatform.ecc_cert_builder)": [[1, "pytrustplatform.ecc_cert_builder.Mah4iDeviceCertificateBuilder"]], "mah4isignercertificatebuilder (class in pytrustplatform.ecc_cert_builder)": [[1, "pytrustplatform.ecc_cert_builder.Mah4iSignerCertificateBuilder"]], "manifest (class in pytrustplatform.manifest.manifest)": [[1, "pytrustplatform.manifest.manifest.Manifest"]], "manifestdataprovider (class in pytrustplatform.manifest.data_provider)": [[1, "pytrustplatform.manifest.data_provider.ManifestDataProvider"]], "manifestsigner (class in pytrustplatform.manifest.manifest)": [[1, "pytrustplatform.manifest.manifest.ManifestSigner"]], "pytrustcertificateerror": [[1, "pytrustplatform.pytrust_errors.PytrustCertificateError"]], "pytrusterror": [[1, "pytrustplatform.pytrust_errors.PytrustError"]], "secureelement (class in pytrustplatform.manifest.manifest)": [[1, "pytrustplatform.manifest.manifest.SecureElement"]], "signedsecureelement (class in pytrustplatform.manifest.manifest)": [[1, "pytrustplatform.manifest.manifest.SignedSecureElement"]], "signercertificaterepresentation (class in pytrustplatform.compressed_cert_decoder)": [[1, "pytrustplatform.compressed_cert_decoder.SignerCertificateRepresentation"]], "tcustomtlssecureelement (class in pytrustplatform.manifest.manifest)": [[1, "pytrustplatform.manifest.manifest.TcustomTlsSecureElement"]], "tnflextlssecureelement (class in pytrustplatform.manifest.manifest)": [[1, "pytrustplatform.manifest.manifest.TnFlexTlsSecureElement"]], "tngotlssecureelement (class in pytrustplatform.manifest.manifest)": [[1, "pytrustplatform.manifest.manifest.TnGoTlsSecureElement"]], "tngdevicecertificatebuilder (class in pytrustplatform.ecc_cert_builder)": [[1, "pytrustplatform.ecc_cert_builder.TngDeviceCertificateBuilder"]], "tngsignercertificatebuilder (class in pytrustplatform.ecc_cert_builder)": [[1, "pytrustplatform.ecc_cert_builder.TngSignerCertificateBuilder"]], "add_signature() (pytrustplatform.ecc_cert_builder.ecccertificatebuilder method)": [[1, "pytrustplatform.ecc_cert_builder.EccCertificateBuilder.add_signature"]], "add_signer_extensions() (in module pytrustplatform.ca_create)": [[1, "pytrustplatform.ca_create.add_signer_extensions"]], "append() (pytrustplatform.manifest.manifest.manifest method)": [[1, "pytrustplatform.manifest.manifest.Manifest.append"]], "build() (pytrustplatform.ecc_cert_builder.mah1hdevicecertificatebuilder method)": [[1, "pytrustplatform.ecc_cert_builder.Mah1hDeviceCertificateBuilder.build"]], "build() (pytrustplatform.ecc_cert_builder.mah1hsignercertificatebuilder method)": [[1, "pytrustplatform.ecc_cert_builder.Mah1hSignerCertificateBuilder.build"]], "build() (pytrustplatform.ecc_cert_builder.mah4idevicecertificatebuilder method)": [[1, "pytrustplatform.ecc_cert_builder.Mah4iDeviceCertificateBuilder.build"]], "build() (pytrustplatform.ecc_cert_builder.tngdevicecertificatebuilder method)": [[1, "pytrustplatform.ecc_cert_builder.TngDeviceCertificateBuilder.build"]], "build() (pytrustplatform.ecc_cert_builder.tngsignercertificatebuilder method)": [[1, "pytrustplatform.ecc_cert_builder.TngSignerCertificateBuilder.build"]], "build() (pytrustplatform.manifest.manifest.tngotlssecureelement method)": [[1, "pytrustplatform.manifest.manifest.TnGoTlsSecureElement.build"]], "build_certs_from_ecc() (in module pytrustplatform.ecc_cert_builder)": [[1, "pytrustplatform.ecc_cert_builder.build_certs_from_ecc"]], "build_device_cert() (in module pytrustplatform.device_cert_builder)": [[1, "pytrustplatform.device_cert_builder.build_device_cert"]], "build_device_csr() (in module pytrustplatform.device_cert_builder)": [[1, "pytrustplatform.device_cert_builder.build_device_csr"]], "build_serialnumber() (pytrustplatform.compressed_cert_decoder.certificaterepresentation method)": [[1, "pytrustplatform.compressed_cert_decoder.CertificateRepresentation.build_serialnumber"]], "build_verification_cert() (in module pytrustplatform.verification_cert_builder)": [[1, "pytrustplatform.verification_cert_builder.build_verification_cert"]], "ca_create_root() (in module pytrustplatform.ca_create)": [[1, "pytrustplatform.ca_create.ca_create_root"]], "ca_create_signer() (in module pytrustplatform.ca_create)": [[1, "pytrustplatform.ca_create.ca_create_signer"]], "ca_create_signer_csr() (in module pytrustplatform.ca_create)": [[1, "pytrustplatform.ca_create.ca_create_signer_csr"]], "cert_get_common_name() (in module pytrustplatform.cert_get_data)": [[1, "pytrustplatform.cert_get_data.cert_get_common_name"]], "cert_get_common_name_from_pem() (in module pytrustplatform.cert_get_data)": [[1, "pytrustplatform.cert_get_data.cert_get_common_name_from_pem"]], "cert_get_skid() (in module pytrustplatform.cert_get_data)": [[1, "pytrustplatform.cert_get_data.cert_get_skid"]], "classify_ecc_type() (in module pytrustplatform.ecc_types)": [[1, "pytrustplatform.ecc_types.classify_ecc_type"]], "create_cert_fingerprint() (in module pytrustplatform.cert_get_data)": [[1, "pytrustplatform.cert_get_data.create_cert_fingerprint"]], "create_key_identifier() (in module pytrustplatform.compressed_cert_decoder)": [[1, "pytrustplatform.compressed_cert_decoder.create_key_identifier"]], "create_manifest_from_certs() (in module pytrustplatform.manifest.manifest_functions)": [[1, "pytrustplatform.manifest.manifest_functions.create_manifest_from_certs"]], "create_manifest_from_secure_element() (in module pytrustplatform.manifest.manifest_functions)": [[1, "pytrustplatform.manifest.manifest_functions.create_manifest_from_secure_element"]], "device_cert_sn() (in module pytrustplatform.device_cert_builder)": [[1, "pytrustplatform.device_cert_builder.device_cert_sn"]], "dumps() (pytrustplatform.manifest.manifest.manifest method)": [[1, "pytrustplatform.manifest.manifest.Manifest.dumps"]], "encode() (pytrustplatform.manifest.manifest.signedsecureelement method)": [[1, "pytrustplatform.manifest.manifest.SignedSecureElement.encode"]], "extract_certificates() (in module pytrustplatform.manifest.manifest_functions)": [[1, "pytrustplatform.manifest.manifest_functions.extract_certificates"]], "extract_certificates_from_secure_element() (in module pytrustplatform.manifest.manifest_functions)": [[1, "pytrustplatform.manifest.manifest_functions.extract_certificates_from_secure_element"]], "find_cert() (pytrustplatform.manifest.manifest.manifestsigner method)": [[1, "pytrustplatform.manifest.manifest.ManifestSigner.find_cert"]], "find_secure_element() (pytrustplatform.manifest.manifest.manifest method)": [[1, "pytrustplatform.manifest.manifest.Manifest.find_secure_element"]], "fingerprint (pytrustplatform.manifest.manifest.manifestsigner attribute)": [[1, "pytrustplatform.manifest.manifest.ManifestSigner.fingerprint"]], "get_certificate() (pytrustplatform.manifest.data_provider.certsdata method)": [[1, "pytrustplatform.manifest.data_provider.CertsData.get_certificate"]], "get_certificate() (pytrustplatform.manifest.data_provider.eccdataprovider method)": [[1, "pytrustplatform.manifest.data_provider.EccDataProvider.get_certificate"]], "get_certificate() (pytrustplatform.manifest.data_provider.ecctestdata method)": [[1, "pytrustplatform.manifest.data_provider.EccTestData.get_certificate"]], "get_certificate() (pytrustplatform.manifest.data_provider.manifestdataprovider method)": [[1, "pytrustplatform.manifest.data_provider.ManifestDataProvider.get_certificate"]], "get_certificate() (pytrustplatform.manifest.manifest.secureelement method)": [[1, "pytrustplatform.manifest.manifest.SecureElement.get_certificate"]], "get_device_certificate() (pytrustplatform.manifest.manifest.tngotlssecureelement method)": [[1, "pytrustplatform.manifest.manifest.TnGoTlsSecureElement.get_device_certificate"]], "get_provisioning_time() (pytrustplatform.manifest.data_provider.certsdata method)": [[1, "pytrustplatform.manifest.data_provider.CertsData.get_provisioning_time"]], "get_provisioning_time() (pytrustplatform.manifest.data_provider.eccdataprovider method)": [[1, "pytrustplatform.manifest.data_provider.EccDataProvider.get_provisioning_time"]], "get_provisioning_time() (pytrustplatform.manifest.data_provider.ecctestdata method)": [[1, "pytrustplatform.manifest.data_provider.EccTestData.get_provisioning_time"]], "get_pubkey() (pytrustplatform.manifest.data_provider.certsdata method)": [[1, "pytrustplatform.manifest.data_provider.CertsData.get_pubkey"]], "get_pubkey() (pytrustplatform.manifest.data_provider.eccdataprovider method)": [[1, "pytrustplatform.manifest.data_provider.EccDataProvider.get_pubkey"]], "get_pubkey() (pytrustplatform.manifest.data_provider.ecctestdata method)": [[1, "pytrustplatform.manifest.data_provider.EccTestData.get_pubkey"]], "get_pubkey() (pytrustplatform.manifest.data_provider.manifestdataprovider method)": [[1, "pytrustplatform.manifest.data_provider.ManifestDataProvider.get_pubkey"]], "get_secure_element() (in module pytrustplatform.manifest.manifest_functions)": [[1, "pytrustplatform.manifest.manifest_functions.get_secure_element"]], "get_secure_element() (pytrustplatform.manifest.data_provider.eccdataprovider method)": [[1, "pytrustplatform.manifest.data_provider.EccDataProvider.get_secure_element"]], "get_secure_element() (pytrustplatform.manifest.data_provider.ecctestdata method)": [[1, "pytrustplatform.manifest.data_provider.EccTestData.get_secure_element"]], "get_secure_element() (pytrustplatform.manifest.manifest.signedsecureelement method)": [[1, "pytrustplatform.manifest.manifest.SignedSecureElement.get_secure_element"]], "get_serial_number() (pytrustplatform.manifest.data_provider.certsdata method)": [[1, "pytrustplatform.manifest.data_provider.CertsData.get_serial_number"]], "get_serial_number() (pytrustplatform.manifest.data_provider.eccdataprovider method)": [[1, "pytrustplatform.manifest.data_provider.EccDataProvider.get_serial_number"]], "get_serial_number() (pytrustplatform.manifest.data_provider.ecctestdata method)": [[1, "pytrustplatform.manifest.data_provider.EccTestData.get_serial_number"]], "get_serial_number() (pytrustplatform.manifest.data_provider.manifestdataprovider method)": [[1, "pytrustplatform.manifest.data_provider.ManifestDataProvider.get_serial_number"]], "get_signer_certificate() (pytrustplatform.manifest.manifest.tngotlssecureelement method)": [[1, "pytrustplatform.manifest.manifest.TnGoTlsSecureElement.get_signer_certificate"]], "list_secure_element_ids() (in module pytrustplatform.manifest.manifest_functions)": [[1, "pytrustplatform.manifest.manifest_functions.list_secure_element_ids"]], "list_secure_elements() (in module pytrustplatform.manifest.manifest_functions)": [[1, "pytrustplatform.manifest.manifest_functions.list_secure_elements"]], "load() (pytrustplatform.manifest.manifest.manifestsigner method)": [[1, "pytrustplatform.manifest.manifest.ManifestSigner.load"]], "load_cert() (in module pytrustplatform.manifest.manifest)": [[1, "pytrustplatform.manifest.manifest.load_cert"]], "load_certificate() (in module pytrustplatform.ca_create)": [[1, "pytrustplatform.ca_create.load_certificate"]], "load_csr() (in module pytrustplatform.ca_create)": [[1, "pytrustplatform.ca_create.load_csr"]], "load_key() (in module pytrustplatform.ca_create)": [[1, "pytrustplatform.ca_create.load_key"]], "load_or_create_key() (in module pytrustplatform.ca_create)": [[1, "pytrustplatform.ca_create.load_or_create_key"]], "log() (pytrustplatform.compressed_cert_decoder.certificaterepresentation method)": [[1, "pytrustplatform.compressed_cert_decoder.CertificateRepresentation.log"]], "module": [[1, "module-pytrustplatform"], [1, "module-pytrustplatform.ca_create"], [1, "module-pytrustplatform.cert_get_data"], [1, "module-pytrustplatform.compressed_cert_decoder"], [1, "module-pytrustplatform.device_cert_builder"], [1, "module-pytrustplatform.ecc_cert_builder"], [1, "module-pytrustplatform.ecc_types"], [1, "module-pytrustplatform.manifest.data_provider"], [1, "module-pytrustplatform.manifest.manifest"], [1, "module-pytrustplatform.manifest.manifest_functions"], [1, "module-pytrustplatform.pytrust_errors"], [1, "module-pytrustplatform.serialnumber"], [1, "module-pytrustplatform.verification_cert_builder"]], "new_device_serialnumber() (in module pytrustplatform.serialnumber)": [[1, "pytrustplatform.serialnumber.new_device_serialnumber"]], "new_publickey_serialnumber() (in module pytrustplatform.serialnumber)": [[1, "pytrustplatform.serialnumber.new_publickey_serialnumber"]], "new_random_serialnumber() (in module pytrustplatform.serialnumber)": [[1, "pytrustplatform.serialnumber.new_random_serialnumber"]], "pytrustplatform": [[1, "module-pytrustplatform"]], "pytrustplatform.ca_create": [[1, "module-pytrustplatform.ca_create"]], "pytrustplatform.cert_get_data": [[1, "module-pytrustplatform.cert_get_data"]], "pytrustplatform.compressed_cert_decoder": [[1, "module-pytrustplatform.compressed_cert_decoder"]], "pytrustplatform.device_cert_builder": [[1, "module-pytrustplatform.device_cert_builder"]], "pytrustplatform.ecc_cert_builder": [[1, "module-pytrustplatform.ecc_cert_builder"]], "pytrustplatform.ecc_types": [[1, "module-pytrustplatform.ecc_types"]], "pytrustplatform.manifest.data_provider": [[1, "module-pytrustplatform.manifest.data_provider"]], "pytrustplatform.manifest.manifest": [[1, "module-pytrustplatform.manifest.manifest"]], "pytrustplatform.manifest.manifest_functions": [[1, "module-pytrustplatform.manifest.manifest_functions"]], "pytrustplatform.pytrust_errors": [[1, "module-pytrustplatform.pytrust_errors"]], "pytrustplatform.serialnumber": [[1, "module-pytrustplatform.serialnumber"]], "pytrustplatform.verification_cert_builder": [[1, "module-pytrustplatform.verification_cert_builder"]], "random_cert_sn() (in module pytrustplatform.ca_create)": [[1, "pytrustplatform.ca_create.random_cert_sn"]], "read_from_kit() (pytrustplatform.compressed_cert_decoder.compressedcertificatedata method)": [[1, "pytrustplatform.compressed_cert_decoder.CompressedCertificateData.read_from_kit"]], "read_from_kit_slot5() (pytrustplatform.compressed_cert_decoder.compressedcertificatedata method)": [[1, "pytrustplatform.compressed_cert_decoder.CompressedCertificateData.read_from_kit_slot5"]], "save_certificate() (in module pytrustplatform.ca_create)": [[1, "pytrustplatform.ca_create.save_certificate"]], "save_key() (in module pytrustplatform.ca_create)": [[1, "pytrustplatform.ca_create.save_key"]], "set_authority_key_identifier() (pytrustplatform.ecc_cert_builder.mah1hdevicecertificatebuilder method)": [[1, "pytrustplatform.ecc_cert_builder.Mah1hDeviceCertificateBuilder.set_authority_key_identifier"]], "set_authority_key_identifier() (pytrustplatform.ecc_cert_builder.tngdevicecertificatebuilder method)": [[1, "pytrustplatform.ecc_cert_builder.TngDeviceCertificateBuilder.set_authority_key_identifier"]], "set_issuer() (pytrustplatform.ecc_cert_builder.mah1hdevicecertificatebuilder method)": [[1, "pytrustplatform.ecc_cert_builder.Mah1hDeviceCertificateBuilder.set_issuer"]], "set_issuer() (pytrustplatform.ecc_cert_builder.tngdevicecertificatebuilder method)": [[1, "pytrustplatform.ecc_cert_builder.TngDeviceCertificateBuilder.set_issuer"]], "set_mac_address() (pytrustplatform.ecc_cert_builder.tngdevicecertificatebuilder method)": [[1, "pytrustplatform.ecc_cert_builder.TngDeviceCertificateBuilder.set_mac_address"]], "set_provisioning_time() (pytrustplatform.manifest.manifest.secureelement method)": [[1, "pytrustplatform.manifest.manifest.SecureElement.set_provisioning_time"]], "set_pubkey() (pytrustplatform.ecc_cert_builder.ecccertificatebuilder method)": [[1, "pytrustplatform.ecc_cert_builder.EccCertificateBuilder.set_pubkey"]], "set_publicjwk() (pytrustplatform.manifest.manifest.secureelement method)": [[1, "pytrustplatform.manifest.manifest.SecureElement.set_publicJWK"]], "set_serial_number() (pytrustplatform.ecc_cert_builder.ecccertificatebuilder method)": [[1, "pytrustplatform.ecc_cert_builder.EccCertificateBuilder.set_serial_number"]], "set_subject() (pytrustplatform.ecc_cert_builder.mah1hsignercertificatebuilder method)": [[1, "pytrustplatform.ecc_cert_builder.Mah1hSignerCertificateBuilder.set_subject"]], "set_subject() (pytrustplatform.ecc_cert_builder.tngdevicecertificatebuilder method)": [[1, "pytrustplatform.ecc_cert_builder.TngDeviceCertificateBuilder.set_subject"]], "set_subject() (pytrustplatform.ecc_cert_builder.tngsignercertificatebuilder method)": [[1, "pytrustplatform.ecc_cert_builder.TngSignerCertificateBuilder.set_subject"]], "set_subject_key_identifier() (pytrustplatform.ecc_cert_builder.mah1hsignercertificatebuilder method)": [[1, "pytrustplatform.ecc_cert_builder.Mah1hSignerCertificateBuilder.set_subject_key_identifier"]], "set_subject_key_identifier() (pytrustplatform.ecc_cert_builder.tngdevicecertificatebuilder method)": [[1, "pytrustplatform.ecc_cert_builder.TngDeviceCertificateBuilder.set_subject_key_identifier"]], "set_subject_key_identifier() (pytrustplatform.ecc_cert_builder.tngsignercertificatebuilder method)": [[1, "pytrustplatform.ecc_cert_builder.TngSignerCertificateBuilder.set_subject_key_identifier"]], "set_unique_id() (pytrustplatform.manifest.manifest.secureelement method)": [[1, "pytrustplatform.manifest.manifest.SecureElement.set_unique_id"]], "set_validity_dates() (pytrustplatform.ecc_cert_builder.ecccertificatebuilder method)": [[1, "pytrustplatform.ecc_cert_builder.EccCertificateBuilder.set_validity_dates"]], "set_validity_dates() (pytrustplatform.ecc_cert_builder.mah1hsignercertificatebuilder method)": [[1, "pytrustplatform.ecc_cert_builder.Mah1hSignerCertificateBuilder.set_validity_dates"]], "urlsafe_b64decode_unpadded() (in module pytrustplatform.manifest.manifest)": [[1, "pytrustplatform.manifest.manifest.urlsafe_b64decode_unpadded"]], "urlsafe_b64encode_unpadded() (in module pytrustplatform.manifest.manifest)": [[1, "pytrustplatform.manifest.manifest.urlsafe_b64encode_unpadded"]], "verify() (pytrustplatform.manifest.manifest.signedsecureelement method)": [[1, "pytrustplatform.manifest.manifest.SignedSecureElement.verify"]]}})