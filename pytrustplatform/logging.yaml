version: 1
disable_existing_loggers: False
formatters:
  timestamped:
    format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  detailed:
    format: "%(name)s - %(levelname)s - %(message)s"
  simple_annotated:
    format: "%(levelname)s - %(message)s"
  simple:
    format: "%(message)s"

filters:
  noinfo:
    (): pytrustplatform.logfilters.NoInfoFilter
  onlyinfo:
    (): pytrustplatform.logfilters.OnlyInfoFilter

handlers:
  # Logging to the console is default to INFO with simple annotated output for INFO level...
  console_only_info:
    class: logging.StreamHandler
    level: INFO
    formatter: simple
    filters: [onlyinfo]
    stream: ext://sys.stdout
  # ...and simple annotated output for all levels except INFO
  console_not_info:
    class: logging.StreamHandler
    level: INFO
    formatter: simple_annotated
    filters: [noinfo]
    stream: ext://sys.stdout

  # More detailed handler to be used when user request DEBUG level logging
  console_detailed:
    class: logging.StreamHandler
    level: DEBUG
    formatter: detailed
    stream: ext://sys.stdout

  # Logging debug output to file
  # Handler disabled by default - for reference only
  #debug_file_handler:
  #  class: logging.FileHandler
  #  level: DEBUG
  #  formatter: timestamped
  #  # File path will be user log directory for this application
  #  filename: debug.log
  #  encoding: utf8

  # Logging errors to file
  # Handler disabled by default - for reference only
  #error_file_handler:
  #  class: logging.handlers.RotatingFileHandler
  #  level: ERROR
  #  formatter: timestamped
  #  # File path will be user log directory for this application
  #  filename: errors.log
  #  maxBytes: 10485760 # 10MB
  #  backupCount: 20
  #  encoding: utf8

loggers:
  # pyedbglib library should be kept to critical errors to console only
  pyedbglib:
    level: ERROR
    handlers: [console_detailed]
    propagate: no
  # pymcuprog, pykitcommander, pydebuggerconfig can warn
  pymcuprog:
    level: WARNING
    handlers: [console_detailed]
    propagate: no
  mplabdeviceprogrammingscript:
    level: WARNING
    handlers: [console_detailed]
    propagate: no
  pykitcommander:
    level: WARNING
    handlers: [console_detailed]
    propagate: no
  pydebuggerconfig:
    level: WARNING
    handlers: [console_detailed]
    propagate: no

root:
  # Default level is warning
  # this is increased with -v <level> in CLI usage
  level: WARNING
  # Default handlers is console only
  handlers: [console_only_info, console_not_info]
  # Add debug_file_handler for debug output to file
  # Add error_file_handler for error output to file
  # See configuration in handlers section above
  #handlers: [console_only_info, console_no_info, debug_file_handler, error_file_handler]
